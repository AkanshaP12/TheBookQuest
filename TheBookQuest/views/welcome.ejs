<% include partials/header %>
<div id="welcome">
    <div class="row searchFilter" style="margin-top: 10px">
        <div class="col-sm-8 offset-sm-2">
            <div class="input-group">
                <input id="table_filter" type="text" class="form-control" placeholder="Search" v-model="searchSelection.query">
                <select v-model="searchSelection.queryType">
                    <option v-for="queryType in searchSelection.queryTypeList" :value="queryType">{{queryType}}</option>
                </select>
                <button id="searchBtn" type="button" class="btn btn-secondary btn-search" v-on:click="updateSearchResults"><span class="label-icon">Search</span></button>
            </div>
        </div>
    </div>
    <div id="catalogue">
        <div class="row">
            <div class="col-md-4" v-for="(literature, index) in literatureList">
                <div class="card flex-md-row mb-4 shadow-sm h-md-250">
                    <div class="col-md-6 card-body d-flex flex-column align-items-start">
                        <strong class="d-inline-block mb-2 text-primary">{{ literature.title }}</strong>
                        <span class="mb-0">
                            <span> By </span><span v-for="author in literature.authors">{{author}}, </span>
                        </span>
                        <h6 class="card-text mb-auto" style="margin-top:10px">{{literature.summary}}</h6>
                        <button type="button" class="btn btn-primary" v-on:click="selectLiterature(literature.literatureTypeId)">
                            <i class="fa fa-search"></i>
                            Quick View</button>
                    </div>
                    <div class="col-md-6">
                        <img class="card-img-right flex-auto d-none d-lg-block" alt="Thumbnail [200x250]" v-bind:src="'/assets/images/' + literature.thumbnail"
                            style="width: 200px; height: 250px;">
                    </div>
                </div>
            </div>
            <div class="col-md-6 offset-md-3" v-if="noResults"> 
                <h1> No results found! Please modify search criteria. </h1>
            </div>
        </div>
    </div>
    <div id="singleItem" style="display : none">
        <div>
            <div class="row">
                <div class="col-md-3">
                    <button type="button" class="btn btn-primary" v-on:click="backToList()">
                    Back
                    </button>
                </div>
                <div class="col-md-3  book-img">
                    <img v-bind:src="'/assets/images/' + selectedLiterature.item.thumbnail" class="img-responsive">
                </div>
                <div class="col-md-4 product_content">
                    <h3 class="modal-title" id="myModalLabel">{{selectedLiterature.item.title}}</h3>
                    <div>
                        <h5 class="badge badge-secondary" v-for="tag in selectedLiterature.item.tags" style="margin-right:5px">{{tag}}</h5>
                    </div>
                    <div>
                        <span class="fa fa-star ratingChecked" v-for="n in selectedLiterature.avgRatingForStars"></span>
                        <span class="fa fa-star" v-for="n in 10-selectedLiterature.avgRatingForStars"></span>
                        <span> {{selectedLiterature.avgRating}}/10 </span>
                    </div>
                    <div>
                        <span>{{selectedLiterature.noOfReviews}} reviews</span>
                    </div>
                    <div>
                        <span>{{selectedLiterature.item.summary}}</span>
                    </div>
                    <div>
                        <span style="font-weight: bold"> Written by : </span><span v-for="author in selectedLiterature.item.authors">{{author}},</span>
                    </div>
                    <div>
                        <span style="font-weight: bold"> Published in : </span><span>{{selectedLiterature.item.year}}</span>
                    </div>

                    <div>
                        <span style="font-weight: bold"> Published by : </span><span>{{selectedLiterature.item.publisher}}</span>
                    </div>
                    <div class="btn-ground" style="padding-top: 20px">
                        <button type="button" class="btn btn-primary" v-if="selectedLiterature.litAvailable"><span class="glyphicon glyphicon-shopping-cart"></span>
                            Issue</button>
                        <button type="button" class="btn btn-secondary" v-if="!selectedLiterature.litAvailable" disabled><span class="glyphicon glyphicon-shopping-cart"></span>
                            Issue</button>
                            <span style="color: red" v-if="!selectedLiterature.litAvailable"> Not available</span>
                            <span style="color: green" v-if="selectedLiterature.litAvailable"> {{selectedLiterature.availableBooks}} literature(s) available</span>
                        <br/>
                    </div>
                </div>
            </div>
            <div class="row" style="padding-top: 10px">
                <div class="col-md-3 offset-sm-3">
                    <h3> {{selectedLiterature.reviews.length}} Reviews </h3>
                </div>
            </div>
            <div class="row" style="padding-top: 10px" v-for="review in selectedLiterature.reviews">
                <div class="col-md-7 offset-sm-3">
                    <div class="review-block">
                        <div class="row">
                            <div class="col-sm-3">
                                <div class="review-block-name" v-for="user in review.users">{{user.firstname}}&nbsp;{{user.lastname}}</div>
                                <div class="review-block-date">{{review.reviewDate}}</div>
                            </div>
                            <div class="col-sm-9">
                                <div>
                                    <span class="fa fa-star ratingChecked" v-for="n in Math.round(review.rating)"></span>
                                    <span class="fa fa-star" v-for="n in 10-Math.round(review.rating)"></span>
                                    <span> {{review.rating}}/10 </span>
                                </div>
                                <div class="review-block-description">{{review.reviewComment}}</div>
                            </div>
                        </div>
                        <hr/>
                    </div>
                </div>
            </div>
            <div class="row" style="padding-top: 10px">
                <div class="col-md-7 offset-sm-3">
                    <div class="review-block">
                        <div class="form-group">
                            <label for="exampleFormControlTextarea3" style="font-weight: bold" >Write review</label>
                            <textarea class="form-control" id="exampleFormControlTextarea3" rows="4" v-model="selectedLiterature.newComment"></textarea>
                        </div>
                    </div>
                    <form class="rating">
                            <label>
                              <input type="radio" name="stars" value="1" v-on:click="captureRating"/>
                              <span class="icon">★</span>
                            </label>
                            <label>
                              <input type="radio" name="stars" value="2" v-on:click="captureRating"/>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                            </label>
                            <label>
                              <input type="radio" name="stars" value="3" v-on:click="captureRating"/>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                              <span class="icon">★</span>   
                            </label>
                            <label>
                              <input type="radio" name="stars" value="4" v-on:click="captureRating"/>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                            </label>
                            <label>
                              <input type="radio" name="stars" value="5" v-on:click="captureRating"/>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                              <span class="icon">★</span>
                            </label>
                            <label>
                                <input type="radio" name="stars" value="6" v-on:click="captureRating"/>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                            </label>
                            <label>
                                <input type="radio" name="stars" value="7" v-on:click="captureRating"/>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                            </label>
                            <label>
                                <input type="radio" name="stars" value="8" v-on:click="captureRating"/>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                            </label>
                            <label>
                                <input type="radio" name="stars" value="9" v-on:click="captureRating"/>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                            </label>
                            <label>
                                <input type="radio" name="stars" value="10" v-on:click="captureRating"/>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                                <span class="icon">★</span>
                            </label>
                          </form>
                    <button type="button" class="btn btn-primary" style="position: absolute; right: 10px;" v-on:click="submitReview()">Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="welcomeError" style="display: none">
    <div class="row">
        <div class="col-sm-6 offset-sm-3">
            <h3> Unable to fetch literatures, please try again after some time. </h3>
        </div>
    </div>
</div>
<script>
    var app;
    $(document).ready(function () {
        $.ajax({
            url: "http://localhost:3000/literatures",
            success: function (data) {
                handleAjaxSuccess(data);
            },
            error: function () {
                handleAjaxError()
            }
        });
    })

    function handleAjaxSuccess(ajaxData) {
        app = new Vue({
            el: '#welcome',
            data: {
                literatureList: ajaxData,
                searchSelection: {
                    query: '',
                    queryType: 'all',
                    queryTypeList : ['all', 'title', 'author', 'publisher name', 'tags']
                },
                noResults: false,
                selectedLiterature : 
                {
                    item : '',
                    avgRating : 0,
                    avgRatingForStars : 0,
                    noOfReviews : 0,
                    litAvailable : false,
                    availableBooks : 0,
                    reviews : '',
                    newComment: '',
                    newCommentRating : 0
                }
            },
            methods : {
                updateSearchResults : function(event) {
                    var self = this
                    var ajaxUrl = 'http://localhost:3000/literatures'
                    if(self.searchSelection.queryType == 'all')
                    {
                        ajaxUrl = 'http://localhost:3000/literatures/search'
                    }
                    else if(self.searchSelection.queryType == 'title')
                    {
                        ajaxUrl = 'http://localhost:3000/literatures/searchtitle'
                    }
                    else if(self.searchSelection.queryType == 'author')
                    {
                        ajaxUrl = 'http://localhost:3000/literatures/searchauthor'
                    }
                    else if(self.searchSelection.queryType == 'publisher name')
                    {
                        ajaxUrl = 'http://localhost:3000/literatures/searchpublishers'
                    }
                    else if(self.searchSelection.queryType == 'tags')
                    {
                        ajaxUrl = 'http://localhost:3000/literatures/searchtags'
                    }

                    $.ajax({
                        url: ajaxUrl,
                        beforeSend: function(request) {
                            request.setRequestHeader("search-query", "{\"query\" : \""+self.searchSelection.query +"\"}");
                        },
                        success: function (data) {
                            app.handleSearchSuccess(data);
                        },
                        error: function () {
                            handleAjaxError()
                        }
                    });

                },
                handleSearchSuccess : function(newData)
                {
                    var self = this
                    if(newData && newData.length > 0)
                    {
                        self.noResults = false
                        self.literatureList = newData
                    }
                    else
                    {
                        self.literatureList = newData
                        self.noResults = true
                    }
                },
                selectLiterature : function(literatureTypeId, avoidToggleVisibility){
                    var self = this
                    self.literatureList.forEach(element => {
                        if(element.literatureTypeId == literatureTypeId)
                        {
                            self.selectedLiterature = {
                                item : element,
                                avgRating : 0,
                                avgRatingForStars : 0,
                                noOfReviews : 0,
                                litAvailable : false,
                                availableBooks : 0,
                                reviews : '',
                                newComment: '',
                                newCommentRating : 0
                            }

                            $.ajax({
                                url: 'http://localhost:3000/reviews/rating',
                                beforeSend: function(request) {
                                    request.setRequestHeader("search-query", "{\"literatureTypeId\" : \""+literatureTypeId +"\"}");
                                },
                                success: function (data) {
                                    app.handleRatingsSuccess(data);
                                },
                                error: function () {
                                    handleAjaxError()
                                }
                            });
                        }
                    });
                    if(!avoidToggleVisibility)
                    {
                        toggleElementVisibility('catalogue', 'singleItem')
                    }
                },
                handleRatingsSuccess : function (data){
                    var self = this
                    if(data.avgRating[0])
                    {
                        self.selectedLiterature.avgRating = data.avgRating[0].average.toFixed(1),
                        self.selectedLiterature.avgRatingForStars = Math.round(data.avgRating[0].average)
                    }
                    self.selectedLiterature.noOfReviews = data.count

                    $.ajax({
                        url: 'http://localhost:3000/literature/available',
                        beforeSend: function(request) {
                            request.setRequestHeader("search-query", "{\"literatureTypeId\" : \""+self.selectedLiterature.item.literatureTypeId +"\"}");
                        },
                        success: function (data) {
                            app.handleLiteratureAvailableSuccess(data);
                        },
                        error: function () {
                            handleAjaxError()
                        }
                    });
                },
                handleLiteratureAvailableSuccess : function(availableCount){
                    var self = this
                    if(availableCount.count > 0)
                    {
                        self.selectedLiterature.availableBooks = availableCount.count;
                        self.selectedLiterature.litAvailable = true
                    }

                    $.ajax({
                        url: 'http://localhost:3000/reviews/literature/' + self.selectedLiterature.item.literatureTypeId,
                        success: function (data) {
                            app.handleReviewsSuccess(data);
                        },
                        error: function () {
                            handleAjaxError()
                        }
                    });

                },
                handleReviewsSuccess : function(reviews){
                    var self = this;
                    self.selectedLiterature.reviews = reviews
                },
                backToList : function(){
                    var self = this;
                    toggleElementVisibility('singleItem', 'catalogue')
                },
                submitReview : function(){
                    var self = this;
                    $.ajax({
                        url: 'http://localhost:3000/reviews/add',
                        type: "post",
                        data: {literatureTypeId : self.selectedLiterature.item.literatureTypeId, comment : self.selectedLiterature.newComment, rating : self.selectedLiterature.newCommentRating},
                        success: function (data) {
                            app.submitAndUpdateReview(data)
                        },
                        error: function () {
                            handleAjaxError()
                        }
                    });
                },
                captureRating : function(event){
                    var self = this;
                    self.selectedLiterature.newCommentRating = event.srcElement.attributes.value.value;
                },
                submitAndUpdateReview : function(data){
                    var self = this;
                    var literatureTypeId = self.selectedLiterature.item.literatureTypeId
                    app.selectLiterature(literatureTypeId, true);
                    $(':radio').prop('checked', false);
                }
            },
            mounted: function () {
                var self = this
                self.$nextTick(function () {
                    if(self.literatureList && self.literatureList.length > 0){   
                        self.noResults = false
                    } 
                    else {
                        self.noResults = true
                    }
                })
            }

        })
    }

    function handleAjaxError() {
        $('welcome').hide();
        $('welcomeError').show();
    }

</script>

<% include partials/footer %>